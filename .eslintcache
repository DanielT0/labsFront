[{"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\index.js":"1","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\CalendarApp.js":"2","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\AppRouter.js":"3","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\store\\store.js":"4","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\PublicRoute.js":"5","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\PrivateRoute.js":"6","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\auth.js":"7","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\rootReducer.js":"8","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\authReducer.js":"9","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\auth\\LoginScreen.js":"10","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarScreen.js":"11","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\labRegister.js":"12","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\usersReducer.js":"13","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\uiReducer.js":"14","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\labReducer.js":"15","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\calendarReducer.js":"16","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\elementReducer.js":"17","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarEvent.js":"18","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\ui.js":"19","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\events.js":"20","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarModal.js":"21","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\types\\types.js":"22","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\labsModal.js":"23","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\calendar-messages-esp.js":"24","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\labs.js":"25","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\fetch.js":"26","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\AddNewFab.js":"27","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\hooks\\useForm.js":"28","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\DeleteEventFab.js":"29","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\Navbar.js":"30","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\prepareEvents.js":"31","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\elements.js":"32","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\users.js":"33","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\proyectos.js":"34","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\proyectosModal.js":"35","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\proyectos.js":"36","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\proyectoReducer.js":"37","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\CardProyecto.js":"38","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\categoriasScreen.js":"39","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\CardCategoria.js":"40","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\categoriasModal.js":"41","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\categoriaReducer.js":"42","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\categoria.js":"43","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\grupoEReducer.js":"44","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\gruposEScreen.js":"45","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\gruposEModal.js":"46","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\grupoElemento.js":"47","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\CardGrupoE.js":"48","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\elementoScreen.js":"49","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\elementoModal.js":"50","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\CardElemento.js":"51","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\sidebar\\sidebar.js":"52","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\main-view\\ViewLaboratorios.js":"53","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\Card.js":"54"},{"size":329,"mtime":1644969667811,"results":"55","hashOfConfig":"56"},{"size":301,"mtime":1643671496056,"results":"57","hashOfConfig":"56"},{"size":3280,"mtime":1645310548491,"results":"58","hashOfConfig":"56"},{"size":582,"mtime":1638291481746,"results":"59","hashOfConfig":"56"},{"size":617,"mtime":1638291481746,"results":"60","hashOfConfig":"56"},{"size":624,"mtime":1638291481746,"results":"61","hashOfConfig":"56"},{"size":2565,"mtime":1644338123737,"results":"62","hashOfConfig":"56"},{"size":808,"mtime":1642556839303,"results":"63","hashOfConfig":"56"},{"size":698,"mtime":1644338189317,"results":"64","hashOfConfig":"56"},{"size":6726,"mtime":1644337428790,"results":"65","hashOfConfig":"56"},{"size":3239,"mtime":1644338278991,"results":"66","hashOfConfig":"56"},{"size":5290,"mtime":1645047133305,"results":"67","hashOfConfig":"56"},{"size":525,"mtime":1642562000330,"results":"68","hashOfConfig":"56"},{"size":522,"mtime":1638291481730,"results":"69","hashOfConfig":"56"},{"size":1895,"mtime":1645045691311,"results":"70","hashOfConfig":"56"},{"size":2510,"mtime":1642569377706,"results":"71","hashOfConfig":"56"},{"size":1900,"mtime":1642560305740,"results":"72","hashOfConfig":"56"},{"size":316,"mtime":1638291481707,"results":"73","hashOfConfig":"56"},{"size":177,"mtime":1638291481692,"results":"74","hashOfConfig":"56"},{"size":3222,"mtime":1642569516479,"results":"75","hashOfConfig":"56"},{"size":7595,"mtime":1642568463886,"results":"76","hashOfConfig":"56"},{"size":2584,"mtime":1645045652263,"results":"77","hashOfConfig":"56"},{"size":4363,"mtime":1642513242522,"results":"78","hashOfConfig":"56"},{"size":357,"mtime":1638291481723,"results":"79","hashOfConfig":"56"},{"size":3525,"mtime":1645045795878,"results":"80","hashOfConfig":"56"},{"size":1084,"mtime":1638291481730,"results":"81","hashOfConfig":"56"},{"size":492,"mtime":1644345747185,"results":"82","hashOfConfig":"56"},{"size":445,"mtime":1638291481730,"results":"83","hashOfConfig":"56"},{"size":545,"mtime":1638291481723,"results":"84","hashOfConfig":"56"},{"size":2493,"mtime":1645043653340,"results":"85","hashOfConfig":"56"},{"size":439,"mtime":1638291481730,"results":"86","hashOfConfig":"56"},{"size":3830,"mtime":1642560079825,"results":"87","hashOfConfig":"56"},{"size":613,"mtime":1638291481692,"results":"88","hashOfConfig":"56"},{"size":9026,"mtime":1652068682127,"results":"89","hashOfConfig":"56"},{"size":5211,"mtime":1642528301948,"results":"90","hashOfConfig":"56"},{"size":3637,"mtime":1642538201094,"results":"91","hashOfConfig":"56"},{"size":1793,"mtime":1642537350148,"results":"92","hashOfConfig":"56"},{"size":3396,"mtime":1642526013619,"results":"93","hashOfConfig":"56"},{"size":8650,"mtime":1643729080806,"results":"94","hashOfConfig":"56"},{"size":3435,"mtime":1642560713954,"results":"95","hashOfConfig":"56"},{"size":3751,"mtime":1642541875627,"results":"96","hashOfConfig":"56"},{"size":1803,"mtime":1642540270252,"results":"97","hashOfConfig":"56"},{"size":3448,"mtime":1642541217963,"results":"98","hashOfConfig":"56"},{"size":1740,"mtime":1642549180288,"results":"99","hashOfConfig":"56"},{"size":8927,"mtime":1644352891186,"results":"100","hashOfConfig":"56"},{"size":6127,"mtime":1642552070331,"results":"101","hashOfConfig":"56"},{"size":3436,"mtime":1642551894451,"results":"102","hashOfConfig":"56"},{"size":3525,"mtime":1644352956664,"results":"103","hashOfConfig":"56"},{"size":8812,"mtime":1643729108616,"results":"104","hashOfConfig":"56"},{"size":7846,"mtime":1642561447514,"results":"105","hashOfConfig":"56"},{"size":3867,"mtime":1642561540825,"results":"106","hashOfConfig":"56"},{"size":634,"mtime":1643734766840,"results":"107","hashOfConfig":"56"},{"size":905,"mtime":1643733398212,"results":"108","hashOfConfig":"56"},{"size":2895,"mtime":1645045384359,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1fsltyq",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"112"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"112"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"112"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"112"},"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\index.js",[],["246","247"],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\CalendarApp.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\AppRouter.js",["248","249"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { LabRegister } from '../components/laboratorios/labRegister';\r\nimport { ProyectoScreen } from '../components/proyectos/proyectos';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { CategoriasScreen } from '../components/categorias/categoriasScreen';\r\nimport { GrupoEScreen } from '../components/grupos-elementos/gruposEScreen';\r\nimport { ElementoScreen } from '../components/elementos/elementoScreen';\r\nimport { ViewLaboratorios } from '../components/main-view/ViewLaboratorios';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute\r\n                            exact\r\n                            path=\"/login\"\r\n                            component={LoginScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/\"\r\n                            component={CalendarScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/laboratorios\"\r\n                            component={LabRegister}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/proyectos\"\r\n                            component={ProyectoScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/categorias\"\r\n                            component={CategoriasScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/grupos-elementos\"\r\n                            component={GrupoEScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/elementos\"\r\n                            component={ElementoScreen}\r\n                            isAuthenticated={!!uid}\r\n                        />\r\n\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\store\\store.js",["250"],"// import { createStore, combineReducers } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from '../reducers/rootReducer';\r\nimport { createStore, compose,  applyMiddleware } from 'redux';\r\n\r\n// const reducers = combineReducers({\r\n//     auth: authReducer\r\n// })\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined'  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\PublicRoute.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\auth.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\rootReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\authReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\auth\\LoginScreen.js",["251"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport './login.css';\r\nimport validator from 'validator';\r\n// import { createStore, applyMiddleware } from 'redux';\r\n\r\n// Note: this API requires redux@>=3.1.0\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange] = useForm ({\r\n        lEmail: 'danieltoor@unisabana.edu.co',\r\n        lPassword: '123456n%M'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm ({\r\n        rId: '',\r\n        rEmail: '',\r\n        rPassword: '',\r\n        rName: '',\r\n        rPassword1: '',\r\n        rPassword2: '' \r\n    });\r\n\r\n    const {  rId, rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        if(! validator.isEmail(lEmail)){\r\n            Swal.fire('Error', 'Ingrese un correo válido', 'error')\r\n            return\r\n        }\r\n        // console.log(lEmail, lPassword)\r\n        dispatch(startLogin( lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        if(rPassword1!=rPassword2){\r\n            Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n            return\r\n        }\r\n        if(validator.isEmpty(rId)){\r\n            Swal.fire('Error', 'Ingrese un Id', 'error')\r\n            return\r\n        }\r\n        if(! validator.isEmail(rEmail)){\r\n            Swal.fire('Error', 'Ingrese un correo válido', 'error')\r\n            return\r\n        }\r\n        if(validator.isNumeric(rName) || validator.isEmpty(rName)){\r\n            Swal.fire('Error', 'El nombre no debe estar vacío ni contener números ni carácteres especiales', 'error')\r\n            return\r\n        }\r\n        dispatch( startRegister(rId, rEmail, rPassword1, rName) )\r\n        // dispatch(startLogin( lEmail, lPassword));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = { handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value = {lEmail}\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value = {lPassword}\r\n                                onChange= { handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                    <div className=\"form-group\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Id\"\r\n                                name=\"rId\"\r\n                                value={rId}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarScreen.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\labRegister.js",["252","253","254","255","256","257","258","259","260","261","262","263"],"import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n} from \"reactstrap\";\r\nimport { LabModal } from \"./labsModal\";\r\nimport { CardAct } from './Card';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { labClearActiveLab, labSetActive, labsStartLoading, labStartDelete, updateLabsFiltrados } from \"../../actions/labs\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst initFilter = {\r\n    tipo: '',\r\n}\r\n\r\nexport const LabRegister = () => {\r\n    const state = {\r\n        modalActualizar: false,\r\n        modalInsertar: false,\r\n        form: {\r\n            id: \"\",\r\n            personaje: \"\",\r\n            anime: \"\",\r\n        },\r\n    };\r\n\r\n    const { labs, labsFiltrados } = useSelector(state => state.lab);\r\n    const [formValues, setFormValues] = useState(initFilter);\r\n    var labsF = labs;\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        // if (target.name == \"tipo\") {\r\n            // labsF = labs.filter((lab) => { if (target.value==\"\") { if(target.value){lab.tipo.includes(target.value) } } else{}});\r\n        // }\r\n        // else if (target.name == \"nombre\") {\r\n            labsF = labs.filter((lab) => lab.nombre.includes(target.value))\r\n        // }\r\n        dispatch(updateLabsFiltrados(labsF));\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(labsStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(labClearActiveLab())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(labSetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch(labStartDelete(lab));\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {\r\n                <Navbar />}\r\n            <div class=\"contenedor__central\">\r\n                <div class=\"upper__section__container\">\r\n                    <div class=\"section__title\">\r\n                        Laboratorios\r\n                    </div>\r\n                    <button class=\"button__crear\"\r\n                        onClick={mostrarModalInsertar}\r\n                    >Crear</button>\r\n                    <div class=\"upper-right\">\r\n                        <input type=\"text\" class=\"search-bar\" placeholder=\"Buscar\" name=\"nombre\" onChange={handleInputChange} />\r\n                        <a><i class=\"uil uil-filter button__icon\"></i></a>\r\n                        <select name=\"tipo\" id=\"tipo\" class=\"filterTipo\" onClick={handleInputChange}>\r\n                            <option value=\"\">Tipo</option>\r\n                            <option value=\"Investigacion\">Investigación</option>\r\n                            <option value=\"Docencia\">Docencia</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"contenedor__laboratorios\">\r\n                    {labsFiltrados.map(dato => (\r\n                        <CardAct\r\n                            key={dato.id}\r\n                            dato={dato} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <LabModal />\r\n        </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\usersReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\uiReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\labReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\calendarReducer.js",["264"],"import moment from 'moment';\r\n\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//     cantidad: '',\r\n//     idUsuario: '',\r\n//     idElemento: '',\r\n//     observaciones: '',\r\n//     fechaPrestamo: moment().toDate(),\r\n//     fechaDevolucion: moment().add(2, 'hours').toDate(),\r\n//     user:{\r\n//         _id:'123',\r\n//         name: 'fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [\r\n        {\r\n            id: '',\r\n            title: 'Hoola',\r\n            start: moment().toDate(),\r\n            end: moment().add(2, 'hours').toDate(),\r\n            cantidad: '4',\r\n            usuarioId: '',\r\n            idElemento: '',\r\n            observaciones: '',\r\n            fechaPrestamo: moment().toDate(),\r\n            fechaDevolucion: moment().add(2, 'hours').toDate(),\r\n            user: {\r\n                _id: '123',\r\n                name: 'fernando'\r\n            },\r\n            elementos:[\r\n\r\n            ]\r\n        }\r\n    ],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e._id === action.payload._id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e._id !== state.activeEvent._id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\elementReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarEvent.js",["265"],"import userEvent from '@testing-library/user-event';\r\nimport React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {idUsuario, observaciones} = event;\r\n    return (\r\n        <div>\r\n            <span>{idUsuario}</span>\r\n            <strong>- {observaciones}</strong>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\ui.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\events.js",["266","267"],"import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event )=>{\r\n    return async(dispatch, getState) =>{\r\n        const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('prestamos', event, 'POST');\r\n            const body= await resp.json();\r\n            if(body.ok){\r\n                event._id = body.prestamo.id\r\n                event.start= body.prestamo.fechaPrestamo\r\n                event.end=body.prestamo.fechaDevolucion\r\n                dispatch(eventAddNew(event))\r\n                Swal.fire('¡Listo!',\r\n                'Préstamo agregado',\r\n                'success')\r\n            }\r\n        } catch (error) {\r\n            Swal('Error','Llene todas las casillas obligatorias', 'error')\r\n            console.log(error)\r\n        }\r\n\r\n        // console.log(body)\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('prestamos')\r\n            const body = await resp.json()\r\n\r\n            const prests = prepareEvents(body.prestamos)\r\n            dispatch(eventLoaded(prests))\r\n            console.log(prests)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n    type: types.eventLoaded, \r\n    payload: events\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate =(event)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`prestamos/${event.id}`, event, 'PUT')\r\n            const body = await resp.json()\r\n            event.start= body.prestamo.fechaPrestamo\r\n            event.end=body.prestamo.fechaDevolucion\r\n            console.log(body)\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete=()=>{\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`prestamos/${id}`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n            console.log(body)\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n                Swal.fire('¡Listo!',\r\n                'Préstamo eliminado',\r\n                'success')\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\calendar\\CalendarModal.js",["268","269","270","271","272","273","274","275"],"import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport Swal from 'sweetalert2';\r\nimport { usersStartLoading } from '../../actions/users';\r\nimport { elementosStartLoading } from '../../actions/elements';\r\nimport { Grid } from '@mui/material';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    cantidad: '',\r\n    usuarioId: '',\r\n    idElemento: '',\r\n    elementos: [],\r\n    observaciones: '',\r\n    fechaPrestamo: moment().toDate(),\r\n    fechaDevolucion: moment().add(2, 'hours').toDate(),\r\n    user: {\r\n        _id: '123',\r\n        name: 'fernando'\r\n    }\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [dateStart, setdateStart] = useState(now.toDate());\r\n    const [dateEnd, setdateEnd] = useState(nowPlus1.toDate());\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { observaciones, cantidad, usuarioId, idElemento, fechaPrestamo, fechaDevolucion } = formValues\r\n    const elementosPrestamo = formValues.elementos;\r\n    const [cantidadValida, setCantidadValida] = useState(true)\r\n    const { users } = useSelector(state => state.user);\r\n    const { elementos } = useSelector(state => state.elemento);\r\n\r\n    const [isOpen, setisOpen] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(usersStartLoading())\r\n        dispatch(elementosStartLoading())\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n            setdateStart(fechaPrestamo)\r\n            setdateEnd(fechaDevolucion)\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(fechaPrestamo)\r\n        const momentEnd = moment(fechaDevolucion)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            Swal.fire(\"Error\", \"La fecha de devolución debe de ser mayor a la de préstamo\", \"error\")\r\n            return;\r\n        }\r\n\r\n        if (!usuarioId) {\r\n            Swal.fire(\"Error\", \"Debe seleccionar un usuario y un elemento\", \"error\")\r\n            return;\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        setCantidadValida(true);\r\n        closeModal();\r\n    }\r\n\r\n    const handleAddElemento = (e) => {\r\n        if (idElemento) {\r\n            if (elementosPrestamo.includes(idElemento)) {\r\n                Swal.fire(\"Error\", \"El elemento ya se agregó a la lista de elementos a prestar \", \"error\")\r\n            }\r\n            else {\r\n                elementosPrestamo.push(idElemento);\r\n                Swal.fire('¡Listo!',\r\n                'Elemento agregado',\r\n                'success')\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            fechaPrestamo: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setdateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            fechaDevolucion: e\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar Préstamo' : 'Nuevo préstamo'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Usuario</label>\r\n                    <select name=\"usuarioId\" id=\"usuarioId\" className=\"form-control\" value={usuarioId} onChange={handleInputChange}>\r\n                        <option value=\"\">-Seleccionar usuario-</option>\r\n                        {users.map((user) => <option value={user.id}>{user.nombre}</option>)}\r\n                    </select>\r\n                    <label>Elemento</label>\r\n                    <select name=\"idElemento\" id=\"idElemento\" className=\"form-control\" value={idElemento} onChange={handleInputChange}>\r\n                        <option value=\"\">-Seleccionar elemento--</option>\r\n                        {elementos.map((elemento) => <option value={elemento.id}>{elemento.nombre}</option>)}\r\n                    </select>\r\n                    <button\r\n                        onClick={handleAddElemento}\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                        type=\"button\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Añadir elemento</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora del préstamo</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={fechaPrestamo}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora devolución</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={fechaDevolucion}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Observaciones\"\r\n                        rows=\"2\"\r\n                        name=\"observaciones\"\r\n                        value={observaciones}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\types\\types.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\labsModal.js",["276","277","278"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { labClearActiveLab, labSetActive, labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initLab = {\r\n    nombre: '',\r\n    descripcion: '',\r\n}\r\n\r\n// Modal\r\n\r\nexport const LabModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initLab)\r\n    const { nombre, descripcion } = formValues\r\n    const { activeLab, labId } = useSelector(state => state.lab);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true)\r\n    const [descripcionValida, setDescripcionValida] = useState(true)\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(labClearActiveLab())\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeLab) {\r\n            setFormValues(activeLab);\r\n        }\r\n        else{\r\n            setFormValues(initLab);\r\n        }\r\n    }, [modalOpen])\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            setDescripcionValida(true);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(descripcion)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la descripción\", \"error\")\r\n            setDescripcionValida(false);\r\n            setNombreValido(true);\r\n            return;\r\n        }\r\n        if (activeLab) {\r\n            dispatch(labStartUpdate(formValues))\r\n        } else {\r\n            dispatch(labStartAddNew(formValues))\r\n        }\r\n        setDescripcionValida(true);\r\n        setNombreValido(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeLab) ? 'Editar laboratorio' : 'Nuevo laboratorio'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Descripcion:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!descripcionValida && 'is-invalid'}`}\r\n                        name=\"descripcion\"\r\n                        type=\"text\"\r\n                        value={descripcion}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n                </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\calendar-messages-esp.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\labs.js",["279"],"import axios from \"axios\"\r\nimport Swal from \"sweetalert2\"\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const labsStartLoading = () =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('laboratorios')\r\n            const body = await resp.json()\r\n\r\n            const labs = body.laboratorios\r\n            console.log(labs)\r\n            dispatch(labLoaded(labs))\r\n            // console.log(prests)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateLabsFiltrados = ( labs ) =>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            console.log(labs)\r\n            dispatch(labFiltered(labs))\r\n            // console.log(prests)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst labFiltered = (labs) =>({\r\n    type: types.labsFiltradosUpdate, \r\n    payload: labs\r\n})\r\n\r\n\r\nexport const labStartAddNew = ( lab )=>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken('laboratorios', lab, 'POST');\r\n            const body= await resp.json();\r\n            console.log(body)\r\n            if(body.ok){\r\n                lab.id=body.id\r\n                lab.nombre= body.nombre\r\n                lab.descripcion=body.descripcion\r\n                dispatch(labAddNew(lab))\r\n                Swal.fire('¡Listo!',\r\n                'Laboratorio agregado',\r\n                'success')\r\n            }\r\n            else{\r\n                Swal.fire('Error',body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            // Swal('Error','Llene todas las casillas obligatorias', 'error')\r\n            console.log(error)\r\n        }\r\n\r\n        // console.log(body)\r\n    }\r\n}\r\n\r\nexport const labSetActive = (lab) => ({\r\n    type: types.labSetActive,\r\n    payload: lab\r\n});\r\n\r\nconst labAddNew = (lab) => ({\r\n    type: types.labAddNew,\r\n    payload: lab\r\n});\r\n\r\nexport const labClearActiveLab = () => ({ type: types.labClearActiveLab });\r\n\r\nconst labLoaded = (labs) =>({\r\n    type: types.labLoaded, \r\n    payload: labs\r\n})\r\n\r\nexport const labStartUpdate =(lab)=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken(`laboratorios/${lab.id}`, lab, 'PUT')\r\n            const body = await resp.json()\r\n            \r\n            if(body.ok){\r\n                dispatch(labUpdated(lab))\r\n                Swal.fire('¡Listo!',\r\n                'Laboratorio actualizado',\r\n                'success')\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst labUpdated = ( lab ) => ({\r\n    type: types.labUpdated,\r\n    payload: lab\r\n});\r\n\r\nexport const labStartDelete=(lab)=>{\r\n    return async(dispatch) => {\r\n        const id = lab.id\r\n        console.log(id);\r\n        try {\r\n            const resp = await fetchConToken(`laboratorios/${id}`, {}, 'DELETE')\r\n            const body = await resp.json()\r\n            console.log(body)\r\n            if(body.ok){\r\n                dispatch(labDeleted(id))\r\n                Swal.fire('¡Listo!',\r\n                'Laboratorio eliminado',\r\n                'success')\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const labDeleted = (id) => ({ type: types.labDeleted, id: id});","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\fetch.js",["280"],"const baseUrl= process.env.REACT_APP_AIP_URL\r\n\r\nconst fetchSinToken = (endpoint, data, method='GET') =>{\r\n    const url=`${ baseUrl }/${endpoint}`;\r\n\r\n    if(method=='GET'){\r\n        return fetch(url)\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET') =>{\r\n    const url=`${ baseUrl }/${endpoint}`;\r\n    const token = localStorage.getItem('token') || \"\";\r\n    console.log(baseUrl, token)\r\n\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\AddNewFab.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\hooks\\useForm.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\DeleteEventFab.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\ui\\Navbar.js",["281","282","283","284","285","286","287","288","289","290"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, Route, Router, Switch } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth'\r\nimport \"./navbar.css\";\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const goToLab = () => {\r\n        console.log(\"buhbiubui\")\r\n        return (\r\n            <Route\r\n                exact\r\n                path=\"/\"\r\n            >\r\n                <Redirect to=\"/laboratorios\" />\r\n            </Route>)\r\n    }\r\n\r\n    var nameArr = name.split(\" \");\r\n    var initials = '';\r\n    var namelen = nameArr.length;\r\n    initials = nameArr[0][0] + nameArr[namelen - 2][0];\r\n\r\n    // for( var i =0; i < nameArr.length; i++){\r\n    //     initials = initials+ nameArr[i][0];\r\n    // }\r\n\r\n    return (\r\n        <header>\r\n            <span className=\"navbar__logo\">\r\n                <img src={logo} alt=\"Tag\" height=\"70\" />\r\n            </span>\r\n            <ul class=\"nav__links\">\r\n                <li>\r\n                    <a><Link to=\"/laboratorios\">Laboratorios</Link></a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a><Link to=\"/\">Préstamos</Link></a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a><Link to=\"/proyectos\" >Proyectos</Link></a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a><Link to=\"/categorias\">Categorias</Link></a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a><Link to=\"/grupos-elementos\">Referencias</Link></a>\r\n                </li>\r\n\r\n                <li>\r\n                    <a><Link to=\"/elementos\">Elementos</Link></a>\r\n                </li>\r\n            </ul>\r\n            <div class=\"profileImage\">\r\n                <div id=\"profileImage\">\r\n                    {initials}\r\n                </div>\r\n                <li class=\"user-links\">\r\n                    <ul class=\"user-menu\">\r\n                        <li>\r\n                            {name}\r\n                        </li>\r\n                        <li>\r\n                            <a class=\"salir\" onClick={handleLogout}> Cerrar sesión </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n\r\n\r\n        </header>\r\n    )\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\helpers\\prepareEvents.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\elements.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\users.js",[],["291","292"],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\proyectos.js",["293","294","295","296","297","298"],"import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect } from \"react\";\r\nimport \"./proyecto.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n    Table,\r\n    Button,\r\n    Container,\r\n} from \"reactstrap\";\r\nimport { ProyectoModal } from \"./proyectosModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { proyClearActiveProy, proySetActive, proyectosStartLoading, proyStartDelete } from \"../../actions/proyectos\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CardProy } from \"./CardProyecto\";\r\nimport { labsStartLoading } from \"../../actions/labs\";\r\n\r\nconst data = [\r\n    { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\r\n    { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\r\n    { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\r\n    { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\r\n    { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\" },\r\n    { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\r\n];\r\n\r\nexport const ProyectoScreen = () => {\r\n\r\n    const { proyectos } = useSelector(state => state.proyecto);\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        console.log(proyectos);\r\n        dispatch(proyectosStartLoading());\r\n        dispatch(labsStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(proyClearActiveProy())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(proySetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch(proyStartDelete(lab));\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {<Navbar />\r\n            /*\r\n            <form class=\"form\">\r\n                <br></br><label style={{ color: 'white', fontSize: '30px', text_shadow: '2px 2px 5px black' }}>Registro de Laboratorio</label>\r\n                <input type=\"id\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Nombre</label>\r\n                <input type=\"nombre\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Descripcion</label>\r\n                <input type=\"password\" class=\"inputT\" />\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            <div style={{ float: 'left', width: '15%', height: '15%' }}> </div>\r\n\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'left' }}>Atras</button>\r\n            <div style={{ float: 'right', width: '15%', height: '1%' }}> </div>\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'right' }}>Enviar</button>\r\n            <div class=\"container\"></div>\r\n            <div class=\"mx-auto col-sm-8 main-section\" id=\"myTab\" role=\"tablist\"></div>\r\n            <ul class=\"nav nav-tabs justify-content-end\"></ul>\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link active\" id=\"list-tab\" data-toggle=\"tab\" href=\"#list\" role=\"tab\" aria-controls=\"list\" aria-selected=\"false\">List</a>\r\n\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link\" id=\"form-tab\" data-toggle=\"tab\" href=\"#form\" role=\"tab\" aria-controls=\"form\" aria-selected=\"true\">Form</a>\r\n\r\n\r\n            <div class=\"tab-content\" id=\"myTabContent\"></div>\r\n            <div class=\"tab-pane fade show active\" id=\"list\" role=\"tabpanel\" aria-labelledby=\"list-tab\"></div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"form\" role=\"tabpanel\" aria-labelledby=\"form-tab\"></div> */}\r\n            <Container>\r\n                <image src=\"./escudo.png\" alt=\"Escudo\" width=\"500\" height=\"600\"></image>\r\n                <Button color=\"success\"\r\n                    onClick={mostrarModalInsertar}\r\n                >Crear</Button>\r\n                <br />\r\n                <br />\r\n                <Grid container>\r\n                    {proyectos.map(dato => (\r\n                        <Grid item xs={6}>\r\n                            <CardProy\r\n                                key={dato.id}\r\n                                dato={dato} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {/*<Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {labs.map((dato) => (\r\n                            <tr key={dato._id}>\r\n                                <td>{dato._id}</td>\r\n                                <td>{dato.nombre}</td>\r\n                                <td>{dato.descripcion}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => mostrarModalActualizar(dato)}\r\n                                    >\r\n                                        Editar\r\n                    </Button>{\" \"}\r\n                                    <Button color=\"danger\" \r\n                                        onClick={() => handleDelete(dato)}\r\n                                    >Eliminar</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                        */}\r\n            </Container>\r\n\r\n\r\n            <ProyectoModal />\r\n\r\n        </div>\r\n\r\n        //         <div class=\"Div\">\r\n\r\n        //             <form class=\"form\">\r\n        //                 <br><br> <label style=\"color: white; font-size: 30px; text-shadow: 2px 2px 5px black;\">Registro de Laboratorio</label>\r\n        //                     <br><br>\r\n        //                         <label class=\"labels\">Id de Laboratorio</label>\r\n        //                         <input type=\"id\" class=\"inputT\" />\r\n        //                         <br><br>\r\n        //                             <label class=\"labels\">Nombre</label>\r\n        //                             <input type=\"nombre\" class=\"inputT\" />\r\n        //                             <br><br>\r\n        //                                 <label class=\"labels\">Descripcion</label>\r\n        //                                 <input type=\"password\" class=\"inputT\" />\r\n        //                                 <br><br>\r\n\r\n        //                                     <br><br>\r\n        //   </form>\r\n        //                                         <div style=\"float:left; width:15%; height:1%;\"> </div>\r\n\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:left;\">Atras</button>\r\n        //                                         <div style=\"float:right; width:15%; height:1%;\r\n        // \"> </div>\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:right;\">Enviar</button>\r\n\r\n        // </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\proyectosModal.js",["299","300"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\n// import { labClearActiveLab, labSetActive, labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { proyectoStartUpdate, proyClearActiveProy, proyectoStartAddNew } from \"../../actions/proyectos\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initProy = {\r\n    nombre: '',\r\n    descripcion: '',\r\n    laboratorioId: '',\r\n}\r\n\r\n// Modal\r\n\r\nexport const ProyectoModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initProy);\r\n    const { nombre, descripcion, laboratorioId } = formValues;\r\n    const { activeProy, labId } = useSelector(state => state.proyecto);\r\n    const { labs } = useSelector(state => state.lab);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true)\r\n    const [descripcionValida, setDescripcionValida] = useState(true)\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(proyClearActiveProy())\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (activeProy) {\r\n            setFormValues(activeProy);\r\n        }\r\n        else {\r\n            setFormValues(initProy);\r\n        }\r\n    }, [modalOpen])\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            setDescripcionValida(true);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(descripcion)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la descripción\", \"error\")\r\n            setDescripcionValida(false);\r\n            setNombreValido(true);\r\n            return;\r\n        }\r\n        console.log(laboratorioId);\r\n        // if (laboratorioId.trim().length < 1) {\r\n        //     Swal.fire(\"Error\", \"Debe seleccionar un laboratorio\", \"error\")\r\n        //     return;\r\n        // }\r\n        if (activeProy) {\r\n            dispatch(proyectoStartUpdate(formValues))\r\n        } else {\r\n            dispatch(proyectoStartAddNew(formValues))\r\n        }\r\n        setDescripcionValida(true);\r\n        setNombreValido(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeProy) ? 'Editar proyecto' : 'Nuevo proyecto'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Descripcion:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!descripcionValida && 'is-invalid'}`}\r\n                        name=\"descripcion\"\r\n                        type=\"text\"\r\n                        value={descripcion}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n                <label>Laboratorio</label>\r\n                <select name=\"laboratorioId\" id=\"laboratorioId\" className=\"form-control\" value={laboratorioId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar laboratorio-</option>\r\n                    {labs.map((lab) => <option value={lab.id}>{lab.nombre}</option>)}\r\n                </select>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n                </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\proyectos.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\proyectoReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\proyectos\\CardProyecto.js",["301","302","303","304","305","306","307","308","309","310","311","312"],"import * as React from 'react';\r\nimport Swal from \"sweetalert2\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { proySetActive, proyStartDelete } from \"../../actions/proyectos\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport const CardProy = ({ dato }) => {\r\n    console.log(dato);\r\n    const bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (proy) => {\r\n        Swal.fire({\r\n            title: '¿Seguro que quieres eliminiar este proyecto?',\r\n            text: \"La información eliminada no podrá ser recuperada\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(proyStartDelete(proy));\r\n            }\r\n          })\r\n    }\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(proySetActive(e))\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    Proyecto\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {dato.nombre}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    {dato.descripcion}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => mostrarModalActualizar(dato)}\r\n                >\r\n                    Editar\r\n                </Button>{\" \"}\r\n                <Button color=\"danger\"\r\n                    onClick={() => handleDelete(dato)}\r\n                >Eliminar</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\categoriasScreen.js",["313","314","315","316","317","318","319","320","321"],"import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect } from \"react\";\r\nimport \"./categoria.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { CategoriaModal, ProyectoModal } from \"./categoriasModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { categoriaClearActiveCategoria, categoriaClearActiveProy, categoriaSetActive, categoriasStartLoading, categoriaStartDelete} from \"../../actions/categoria\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CardCategoria, CardProy } from \"./CardCategoria\";\r\nimport { labsStartLoading } from \"../../actions/labs\";\r\n\r\n\r\nexport const CategoriasScreen = () => {\r\n    const state = {\r\n        modalActualizar: false,\r\n        modalInsertar: false,\r\n    };\r\n\r\n    const { categorias } = useSelector(state => state.categoria);\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(categoriasStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(categoriaClearActiveCategoria())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(categoriaSetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch( categoriaStartDelete(lab) );\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {<Navbar />\r\n            /*\r\n            <form class=\"form\">\r\n                <br></br><label style={{ color: 'white', fontSize: '30px', text_shadow: '2px 2px 5px black' }}>Registro de Laboratorio</label>\r\n                <input type=\"id\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Nombre</label>\r\n                <input type=\"nombre\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Descripcion</label>\r\n                <input type=\"password\" class=\"inputT\" />\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            <div style={{ float: 'left', width: '15%', height: '15%' }}> </div>\r\n\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'left' }}>Atras</button>\r\n            <div style={{ float: 'right', width: '15%', height: '1%' }}> </div>\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'right' }}>Enviar</button>\r\n            <div class=\"container\"></div>\r\n            <div class=\"mx-auto col-sm-8 main-section\" id=\"myTab\" role=\"tablist\"></div>\r\n            <ul class=\"nav nav-tabs justify-content-end\"></ul>\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link active\" id=\"list-tab\" data-toggle=\"tab\" href=\"#list\" role=\"tab\" aria-controls=\"list\" aria-selected=\"false\">List</a>\r\n\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link\" id=\"form-tab\" data-toggle=\"tab\" href=\"#form\" role=\"tab\" aria-controls=\"form\" aria-selected=\"true\">Form</a>\r\n\r\n\r\n            <div class=\"tab-content\" id=\"myTabContent\"></div>\r\n            <div class=\"tab-pane fade show active\" id=\"list\" role=\"tabpanel\" aria-labelledby=\"list-tab\"></div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"form\" role=\"tabpanel\" aria-labelledby=\"form-tab\"></div> */}\r\n            <Container>\r\n                <Button color=\"success\"\r\n                 onClick={mostrarModalInsertar}\r\n                 >Crear</Button>\r\n                <br />\r\n                <br />\r\n                <Grid container>\r\n                    {categorias.map(dato=>(\r\n                        <Grid item xs={6}>\r\n                            <CardCategoria \r\n                            key={dato.id}\r\n                            dato = {dato}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {/*<Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {labs.map((dato) => (\r\n                            <tr key={dato._id}>\r\n                                <td>{dato._id}</td>\r\n                                <td>{dato.nombre}</td>\r\n                                <td>{dato.descripcion}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => mostrarModalActualizar(dato)}\r\n                                    >\r\n                                        Editar\r\n                    </Button>{\" \"}\r\n                                    <Button color=\"danger\" \r\n                                        onClick={() => handleDelete(dato)}\r\n                                    >Eliminar</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                        */}\r\n            </Container>\r\n\r\n            \r\n            <CategoriaModal/>\r\n\r\n        </div>\r\n\r\n        //         <div class=\"Div\">\r\n\r\n        //             <form class=\"form\">\r\n        //                 <br><br> <label style=\"color: white; font-size: 30px; text-shadow: 2px 2px 5px black;\">Registro de Laboratorio</label>\r\n        //                     <br><br>\r\n        //                         <label class=\"labels\">Id de Laboratorio</label>\r\n        //                         <input type=\"id\" class=\"inputT\" />\r\n        //                         <br><br>\r\n        //                             <label class=\"labels\">Nombre</label>\r\n        //                             <input type=\"nombre\" class=\"inputT\" />\r\n        //                             <br><br>\r\n        //                                 <label class=\"labels\">Descripcion</label>\r\n        //                                 <input type=\"password\" class=\"inputT\" />\r\n        //                                 <br><br>\r\n\r\n        //                                     <br><br>\r\n        //   </form>\r\n        //                                         <div style=\"float:left; width:15%; height:1%;\"> </div>\r\n\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:left;\">Atras</button>\r\n        //                                         <div style=\"float:right; width:15%; height:1%;\r\n        // \"> </div>\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:right;\">Enviar</button>\r\n\r\n        // </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\CardCategoria.js",["322","323","324","325","326","327","328","329","330","331","332","333"],"import * as React from 'react';\r\nimport Swal from \"sweetalert2\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { categoriaSetActive, categoriaStartDelete } from \"../../actions/categoria\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport const CardCategoria = ({ dato }) => {\r\n    console.log(dato);\r\n    const bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (categoria) => {\r\n        Swal.fire({\r\n            title: '¿Seguro que quieres eliminiar esta categoría?',\r\n            text: \"La información eliminada no podrá ser recuperada\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(categoriaStartDelete(categoria));\r\n            }\r\n          })\r\n    }\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(categoriaSetActive(e))\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    Categoría\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {dato.nombre}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    {dato.descripcion}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => mostrarModalActualizar(dato)}\r\n                >\r\n                    Editar\r\n                </Button>{\" \"}\r\n                <Button color=\"danger\"\r\n                    onClick={() => handleDelete(dato)}\r\n                >Eliminar</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\categorias\\categoriasModal.js",["334","335"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { categoriaClearActiveCategoria } from \"../../actions/categoria\";\r\n// import { labClearActiveLab, labSetActive, labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { categoriaStartUpdate, categoriaClearActiveProy, categoriaStartAddNew } from \"../../actions/categoria\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initCategoria = {\r\n    nombre: '',\r\n}\r\n\r\n// Modal\r\n\r\nexport const CategoriaModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initCategoria);\r\n    const { nombre } = formValues;\r\n    const { activeCategoria } = useSelector(state => state.categoria);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true)\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(categoriaClearActiveCategoria())\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (activeCategoria) {\r\n            setFormValues(activeCategoria);\r\n        }\r\n        else {\r\n            setFormValues(initCategoria);\r\n        }\r\n    }, [modalOpen])\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            return;\r\n        }\r\n        if (activeCategoria) {\r\n            dispatch(categoriaStartUpdate(formValues))\r\n        } else {\r\n            dispatch(categoriaStartAddNew(formValues))\r\n        }\r\n        setNombreValido(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeCategoria) ? 'Editar categoría' : 'Nueva categoría'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n                </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\categoriaReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\categoria.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\reducers\\grupoEReducer.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\gruposEScreen.js",["336","337","338","339","340"],"import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect } from \"react\";\r\nimport \"./grupo-elementos.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { GrupoEModal } from \"./gruposEModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { grupoEClearActivegrupoE, grupoESetActive, gruposEStartLoading, grupoEStartDelete} from \"../../actions/grupoElemento\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CardGrupoE } from \"./CardGrupoE\";\r\nimport { labsStartLoading } from \"../../actions/labs\";\r\n\r\nconst data = [\r\n  { id: 1, personaje: \"Naruto\", anime: \"Naruto\" },\r\n  { id: 2, personaje: \"Goku\", anime: \"Dragon Ball\" },\r\n  { id: 3, personaje: \"Kenshin Himura\", anime: \"Rurouni Kenshin\" },\r\n  { id: 4, personaje: \"Monkey D. Luffy\", anime: \"One Piece\" },\r\n  { id: 5, personaje: \"Edward Elric\", anime: \"Fullmetal Alchemist: Brotherhood\"},\r\n  { id: 6, personaje: \"Seto Kaiba\", anime: \"Yu-Gi-Oh!\" },\r\n];\r\n\r\nexport const GrupoEScreen = () => {\r\n\r\n    const { gruposE } = useSelector(state => state.grupoE);\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(gruposEStartLoading());\r\n        dispatch(labsStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(grupoEClearActivegrupoE())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(grupoESetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch( grupoEStartDelete(lab) );\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {<Navbar />\r\n            /*\r\n            <form class=\"form\">\r\n                <br></br><label style={{ color: 'white', fontSize: '30px', text_shadow: '2px 2px 5px black' }}>Registro de Laboratorio</label>\r\n                <input type=\"id\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Nombre</label>\r\n                <input type=\"nombre\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Descripcion</label>\r\n                <input type=\"password\" class=\"inputT\" />\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            <div style={{ float: 'left', width: '15%', height: '15%' }}> </div>\r\n\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'left' }}>Atras</button>\r\n            <div style={{ float: 'right', width: '15%', height: '1%' }}> </div>\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'right' }}>Enviar</button>\r\n            <div class=\"container\"></div>\r\n            <div class=\"mx-auto col-sm-8 main-section\" id=\"myTab\" role=\"tablist\"></div>\r\n            <ul class=\"nav nav-tabs justify-content-end\"></ul>\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link active\" id=\"list-tab\" data-toggle=\"tab\" href=\"#list\" role=\"tab\" aria-controls=\"list\" aria-selected=\"false\">List</a>\r\n\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link\" id=\"form-tab\" data-toggle=\"tab\" href=\"#form\" role=\"tab\" aria-controls=\"form\" aria-selected=\"true\">Form</a>\r\n\r\n\r\n            <div class=\"tab-content\" id=\"myTabContent\"></div>\r\n            <div class=\"tab-pane fade show active\" id=\"list\" role=\"tabpanel\" aria-labelledby=\"list-tab\"></div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"form\" role=\"tabpanel\" aria-labelledby=\"form-tab\"></div> */}\r\n            \r\n                \r\n            <Container>\r\n                <Button color=\"success\"\r\n                 onClick={mostrarModalInsertar}\r\n                 >Crear</Button>\r\n                <br />\r\n                <br />\r\n                <Grid container>\r\n                    {gruposE.map(dato=>(\r\n                        <Grid item xs={6}>\r\n                            <CardGrupoE\r\n                            key={dato.id}\r\n                            dato = {dato}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {/*<Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {labs.map((dato) => (\r\n                            <tr key={dato._id}>\r\n                                <td>{dato._id}</td>\r\n                                <td>{dato.nombre}</td>\r\n                                <td>{dato.descripcion}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => mostrarModalActualizar(dato)}\r\n                                    >\r\n                                        Editar\r\n                    </Button>{\" \"}\r\n                                    <Button color=\"danger\" \r\n                                        onClick={() => handleDelete(dato)}\r\n                                    >Eliminar</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                        */}\r\n            </Container>\r\n\r\n            \r\n            <GrupoEModal/>\r\n\r\n        </div>\r\n\r\n        //         <div class=\"Div\">\r\n\r\n        //             <form class=\"form\">\r\n        //                 <br><br> <label style=\"color: white; font-size: 30px; text-shadow: 2px 2px 5px black;\">Registro de Laboratorio</label>\r\n        //                     <br><br>\r\n        //                         <label class=\"labels\">Id de Laboratorio</label>\r\n        //                         <input type=\"id\" class=\"inputT\" />\r\n        //                         <br><br>\r\n        //                             <label class=\"labels\">Nombre</label>\r\n        //                             <input type=\"nombre\" class=\"inputT\" />\r\n        //                             <br><br>\r\n        //                                 <label class=\"labels\">Descripcion</label>\r\n        //                                 <input type=\"password\" class=\"inputT\" />\r\n        //                                 <br><br>\r\n\r\n        //                                     <br><br>\r\n        //   </form>\r\n        //                                         <div style=\"float:left; width:15%; height:1%;\"> </div>\r\n\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:left;\">Atras</button>\r\n        //                                         <div style=\"float:right; width:15%; height:1%;\r\n        // \"> </div>\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:right;\">Enviar</button>\r\n\r\n        // </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\gruposEModal.js",["341"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { grupoEClearActivegrupoE, grupoEStartUpdate, grupoEStartAddNew } from \"../../actions/grupoElemento\";\r\n// import { labClearActiveLab, labSetActive, labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initGrupoE = {\r\n    nombre: '',\r\n    foto: '',\r\n    minimo: '',\r\n    laboratorioId: '',\r\n}\r\n\r\n// Modal\r\n\r\nexport const GrupoEModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initGrupoE);\r\n    const { nombre, laboratorioId, foto, minimo } = formValues;\r\n    const { activeGrupoE} = useSelector(state => state.grupoE);\r\n    const { labs } = useSelector(state => state.lab);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true);\r\n    const [fotoValida, setFotoValida] = useState(true);\r\n    const [minimoValido, setMinimoValido] = useState(true);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(grupoEClearActivegrupoE())\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeGrupoE) {\r\n            setFormValues(activeGrupoE);\r\n        }\r\n        else {\r\n            setFormValues(initGrupoE);\r\n        }\r\n    }, [modalOpen])\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        setNombreValido(true);\r\n        setFotoValida(true);\r\n        setMinimoValido(true);\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(foto)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la foto\", \"error\")\r\n            setFotoValida(false);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(minimo)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la cantidad mínima de productos deseados en inventario\", \"error\")\r\n            setMinimoValido(false);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(laboratorioId)) {\r\n            Swal.fire(\"Error\", \"Seleccione un laboratorio\", \"error\")\r\n            return;\r\n        }\r\n        console.log(laboratorioId);\r\n        // if (laboratorioId.trim().length < 1) {\r\n        //     Swal.fire(\"Error\", \"Debe seleccionar un laboratorio\", \"error\")\r\n        //     return;\r\n        // }\r\n        if (activeGrupoE) {\r\n            dispatch(grupoEStartUpdate(formValues))\r\n        } else {\r\n            dispatch(grupoEStartAddNew(formValues))\r\n        }\r\n        setNombreValido(true)\r\n        setFotoValida(true);\r\n        setMinimoValido(true);\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeGrupoE) ? 'Editar grupo' : 'Nuevo grupo'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Foto:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!fotoValida && 'is-invalid'}`}\r\n                        name=\"foto\"\r\n                        type=\"text\"\r\n                        value={foto}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label>\r\n                        Cantidad mínima en inventario:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!minimoValido && 'is-invalid'}`}\r\n                        name=\"minimo\"\r\n                        type=\"text\"\r\n                        value={minimo}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n                \r\n                <label>Laboratorio</label>\r\n                <select name=\"laboratorioId\" id=\"laboratorioId\" className=\"form-control\" value={laboratorioId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar laboratorio-</option>\r\n                    {labs.map((lab) => <option value={lab.id}>{lab.nombre}</option>)}\r\n                </select>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n                </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\actions\\grupoElemento.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\grupos-elementos\\CardGrupoE.js",["342","343","344","345","346","347","348","349","350","351","352","353"],"import * as React from 'react';\r\nimport Swal from \"sweetalert2\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { grupoESetActive, grupoEStartDelete } from \"../../actions/grupoElemento\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport const CardGrupoE = ({ dato }) => {\r\n    console.log(dato);\r\n    const bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (grupoE) => {\r\n        Swal.fire({\r\n            title: '¿Seguro que quieres eliminiar este grupo?',\r\n            text: \"La información eliminada no podrá ser recuperada\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(grupoEStartDelete(grupoE));\r\n            }\r\n          })\r\n    }\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(grupoESetActive(e))\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    Grupo\r\n                </Typography>\r\n                <img src={`${dato.foto}`} alt=\"Foto no encontrada\" class=\"about__img\"></img>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {dato.nombre}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    Cantidad mínima permitida: {dato.minimo}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => mostrarModalActualizar(dato)}\r\n                >\r\n                    Editar\r\n                </Button>{\" \"}\r\n                <Button color=\"danger\"\r\n                    onClick={() => handleDelete(dato)}\r\n                >Eliminar</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\elementoScreen.js",["354","355","356","357","358"],"import { Navbar } from \"../ui/Navbar\"\r\nimport React, { useEffect } from \"react\";\r\nimport \"./elementos.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { ElementoModal } from \"./elementoModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { elementoClearActiveelemento, elementoSetActive, elementosStartLoading, elementoStartDelete} from \"../../actions/elements\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { CardElemento } from \"./CardElemento\";\r\nimport { labsStartLoading } from \"../../actions/labs\";\r\nimport { categoriasStartLoading } from \"../../actions/categoria\";\r\nimport { gruposEStartLoading } from \"../../actions/grupoElemento\";\r\nimport { proyectosStartLoading } from \"../../actions/proyectos\";\r\n\r\nexport const ElementoScreen = () => {\r\n\r\n    const { elementos } = useSelector(state => state.elemento);\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(elementosStartLoading());\r\n        dispatch(proyectosStartLoading());\r\n        dispatch(categoriasStartLoading());\r\n        dispatch(gruposEStartLoading());\r\n    }, [dispatch])\r\n\r\n    // const mostrarModalActualizar = (dato) => {\r\n    //     setState({\r\n    //         form: dato,\r\n    //         modalActualizar: true,\r\n    //     });\r\n    // };\r\n\r\n    // const cerrarModalActualizar = () => {\r\n    //     setState({ modalActualizar: false });\r\n    // };\r\n\r\n    const mostrarModalInsertar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(elementoClearActiveelemento())\r\n    };\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(elementoSetActive(e))\r\n    }\r\n\r\n    const cerrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    };\r\n\r\n    const handleDelete = (lab) => {\r\n        dispatch( elementoStartDelete(lab) );\r\n    }\r\n\r\n    // const editar = (dato) => {\r\n    //     var contador = 0;\r\n    //     var arreglo = state.data;\r\n    //     arreglo.map((registro) => {\r\n    //         if (dato.id == registro.id) {\r\n    //             arreglo[contador].personaje = dato.personaje;\r\n    //             arreglo[contador].anime = dato.anime;\r\n    //         }\r\n    //         contador++;\r\n    //     });\r\n    //     setState({ data: arreglo, modalActualizar: false });\r\n    // };\r\n\r\n    // const eliminar = (dato) => {\r\n    //     var opcion = window.confirm(\"Estás Seguro que deseas Eliminar el elemento \" + dato.id);\r\n    //     if (opcion == true) {\r\n    //         var contador = 0;\r\n    //         var arreglo = state.data;\r\n    //         arreglo.map((registro) => {\r\n    //             if (dato.id == registro.id) {\r\n    //                 arreglo.splice(contador, 1);\r\n    //             }\r\n    //             contador++;\r\n    //         });\r\n    //         setState({ data: arreglo, modalActualizar: false });\r\n    //     }\r\n    // };\r\n\r\n    // const insertar = () => {\r\n    //     var valorNuevo = { ...state.form };\r\n    //     valorNuevo.id = state.data.length + 1;\r\n    //     var lista = state.data;\r\n    //     lista.push(valorNuevo);\r\n    //     setState({ modalInsertar: false, data: lista });\r\n    // }\r\n\r\n    // const handleChange = (e) => {\r\n    //     setState({\r\n    //         form: {\r\n    //             ...state.form,\r\n    //             [e.target.name]: e.target.value,\r\n    //         },\r\n    //     });\r\n    // };\r\n    return (\r\n        <div class=\"Div\">\r\n            {<Navbar />\r\n            /*\r\n            <form class=\"form\">\r\n                <br></br><label style={{ color: 'white', fontSize: '30px', text_shadow: '2px 2px 5px black' }}>Registro de Laboratorio</label>\r\n                <input type=\"id\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Nombre</label>\r\n                <input type=\"nombre\" class=\"inputT\" />\r\n                <br></br>\r\n                <label class=\"labels\">Descripcion</label>\r\n                <input type=\"password\" class=\"inputT\" />\r\n                <br></br>\r\n                <br></br>\r\n            </form>\r\n            <div style={{ float: 'left', width: '15%', height: '15%' }}> </div>\r\n\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'left' }}>Atras</button>\r\n            <div style={{ float: 'right', width: '15%', height: '1%' }}> </div>\r\n            <button type=\"submit\" class=\"boton\" style={{ float: 'right' }}>Enviar</button>\r\n            <div class=\"container\"></div>\r\n            <div class=\"mx-auto col-sm-8 main-section\" id=\"myTab\" role=\"tablist\"></div>\r\n            <ul class=\"nav nav-tabs justify-content-end\"></ul>\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link active\" id=\"list-tab\" data-toggle=\"tab\" href=\"#list\" role=\"tab\" aria-controls=\"list\" aria-selected=\"false\">List</a>\r\n\r\n            <li class=\"nav-item\"></li>\r\n            <a class=\"nav-link\" id=\"form-tab\" data-toggle=\"tab\" href=\"#form\" role=\"tab\" aria-controls=\"form\" aria-selected=\"true\">Form</a>\r\n\r\n\r\n            <div class=\"tab-content\" id=\"myTabContent\"></div>\r\n            <div class=\"tab-pane fade show active\" id=\"list\" role=\"tabpanel\" aria-labelledby=\"list-tab\"></div>\r\n\r\n            <div class=\"tab-pane fade\" id=\"form\" role=\"tabpanel\" aria-labelledby=\"form-tab\"></div> */}\r\n            <Container>\r\n                <Button color=\"success\"\r\n                 onClick={mostrarModalInsertar}\r\n                 >Crear</Button>\r\n                <br />\r\n                <br />\r\n                <Grid container>\r\n                    {elementos.map(dato=>(\r\n                        <Grid item xs={6}>\r\n                            <CardElemento\r\n                            key={dato.id}\r\n                            dato = {dato}/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                {/*<Table>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Descripción</th>\r\n                            <th>Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {labs.map((dato) => (\r\n                            <tr key={dato._id}>\r\n                                <td>{dato._id}</td>\r\n                                <td>{dato.nombre}</td>\r\n                                <td>{dato.descripcion}</td>\r\n                                <td>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        onClick={() => mostrarModalActualizar(dato)}\r\n                                    >\r\n                                        Editar\r\n                    </Button>{\" \"}\r\n                                    <Button color=\"danger\" \r\n                                        onClick={() => handleDelete(dato)}\r\n                                    >Eliminar</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                        */}\r\n            </Container>\r\n\r\n            \r\n            <ElementoModal/>\r\n\r\n        </div>\r\n\r\n        //         <div class=\"Div\">\r\n\r\n        //             <form class=\"form\">\r\n        //                 <br><br> <label style=\"color: white; font-size: 30px; text-shadow: 2px 2px 5px black;\">Registro de Laboratorio</label>\r\n        //                     <br><br>\r\n        //                         <label class=\"labels\">Id de Laboratorio</label>\r\n        //                         <input type=\"id\" class=\"inputT\" />\r\n        //                         <br><br>\r\n        //                             <label class=\"labels\">Nombre</label>\r\n        //                             <input type=\"nombre\" class=\"inputT\" />\r\n        //                             <br><br>\r\n        //                                 <label class=\"labels\">Descripcion</label>\r\n        //                                 <input type=\"password\" class=\"inputT\" />\r\n        //                                 <br><br>\r\n\r\n        //                                     <br><br>\r\n        //   </form>\r\n        //                                         <div style=\"float:left; width:15%; height:1%;\"> </div>\r\n\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:left;\">Atras</button>\r\n        //                                         <div style=\"float:right; width:15%; height:1%;\r\n        // \"> </div>\r\n        //                                         <button type=\"submit\" class=\"boton\" style=\" float:right;\">Enviar</button>\r\n\r\n        // </div>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\elementoModal.js",["359","360","361"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    ModalFooter,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport validator from \"validator\";\r\nimport { elementoClearActiveelemento, elementoStartUpdate, elementoStartAddNew } from \"../../actions/elements\";\r\n// import { labClearActiveLab, labSetActive, labStartAddNew, labStartUpdate } from \"../../actions/labs\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst initElemento = {\r\n    referencia: '',\r\n    nombre: '',\r\n    descripcion: '',\r\n    estado: '',\r\n    observaciones: '',\r\n    proyectoId: '',\r\n    categoriumId: '',\r\n    grupoId: '',\r\n}\r\n\r\nconst estados = ['Completo', 'Dañado']\r\n\r\n// Modal\r\n\r\nexport const ElementoModal = () => {\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const [formValues, setFormValues] = useState(initElemento);\r\n    const { nombre, descripcion, referencia, estado, observaciones, proyectoId, categoriumId, grupoId } = formValues;\r\n    const { activeElemento } = useSelector(state => state.elemento);\r\n    const { proyectos } = useSelector(state => state.proyecto);\r\n    const { categorias } = useSelector(state => state.categoria);\r\n    const { gruposE } = useSelector(state => state.grupoE);\r\n\r\n    const [nombreValido, setNombreValido] = useState(true);\r\n    const [descripcionValida, setDescripcionValida] = useState(true);\r\n    const [referenciaValida, setReferenciaValida] = useState(true);\r\n    // const [estadoValido, setEstadoValido] = useState(true);\r\n    const [observacionesValidas, setObservacionesValidas] = useState(true);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch(elementoClearActiveelemento())\r\n        dispatch(uiCloseModal());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (activeElemento) {\r\n            setFormValues(activeElemento);\r\n        }\r\n        else {\r\n            setFormValues(initElemento);\r\n        }\r\n    }, [modalOpen])\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        setNombreValido(true);\r\n        setDescripcionValida(true);\r\n        setReferenciaValida(true);\r\n        setObservacionesValidas(true);\r\n        if (validator.isEmpty(nombre)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese el nombre\", \"error\")\r\n            setNombreValido(false);\r\n            return;\r\n        }\r\n        if (validator.isEmpty(descripcion)) {\r\n            Swal.fire(\"Error\", \"No pueden haber campos vacíos, ingrese la descripción\", \"error\")\r\n            setDescripcionValida(false);\r\n            return;\r\n        }\r\n        if (!categoriumId) {\r\n            Swal.fire(\"Error\", \"Seleccione una categoría\", \"error\")\r\n            return;\r\n        }\r\n        if(!proyectoId){\r\n            Swal.fire(\"Error\", \"Seleccione un proyecto\", \"error\")\r\n            return;\r\n        }\r\n        if(!grupoId){\r\n            Swal.fire(\"Error\", \"Seleccione un grupo\", \"error\")\r\n            return;\r\n        }\r\n        if(!estado){\r\n            Swal.fire(\"Error\", \"Seleccione un estado del elemento\", \"error\")\r\n            return;\r\n        }\r\n        // if (laboratorioId.trim().length < 1) {\r\n        //     Swal.fire(\"Error\", \"Debe seleccionar un laboratorio\", \"error\")\r\n        //     return;\r\n        // }\r\n        if (activeElemento) {\r\n            dispatch(elementoStartUpdate(formValues))\r\n        } else {\r\n            dispatch(elementoStartAddNew(formValues))\r\n        }\r\n        setNombreValido(true)\r\n        setDescripcionValida(true);\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <ModalHeader>\r\n                <div><h3>{(activeElemento) ? 'Editar elemento' : 'Nuevo elemento'} </h3></div>\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Nombre:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!nombreValido && 'is-invalid'}`}\r\n\r\n                        name=\"nombre\"\r\n                        type=\"text\"\r\n                        value={nombre}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <label>\r\n                        Referencia:\r\n                    </label>\r\n                    <input\r\n                        className={`form-control ${!referenciaValida && 'is-invalid'}`}\r\n                        name=\"referencia\"\r\n                        type=\"text\"\r\n                        value={referencia}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label>\r\n                        Descripción\r\n                    </label>\r\n                    <textarea\r\n                        className={`form-control ${!descripcionValida && 'is-invalid'}`}\r\n                        name=\"descripcion\"\r\n                        value={descripcion}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <label> Proyecto</label>\r\n                <select name=\"proyectoId\" id=\"proyectoId\" className=\"form-control\" value={proyectoId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar proyecto-</option>\r\n                    {proyectos.map((proyecto) => <option value={proyecto.id}>{proyecto.nombre}</option>)}\r\n                </select>\r\n\r\n                <label> Categoría</label>\r\n                <select name=\"categoriumId\" id=\"categoriumId\" className=\"form-control\" value={categoriumId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar categoría-</option>\r\n                    {categorias.map((categoria) => <option value={categoria.id}>{categoria.nombre}</option>)}\r\n                </select>\r\n\r\n                <label> Grupo </label>\r\n                <select name=\"grupoId\" id=\"grupoId\" className=\"form-control\" value={grupoId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar grupo-</option>\r\n                    {gruposE.map((grupo) => <option value={grupo.id}>{grupo.nombre}</option>)}\r\n                </select>\r\n\r\n                <label> Estado </label>\r\n                <select name=\"estado\" id=\"estado\" className=\"form-control\" value={grupoId} onChange={handleInputChange}>\r\n                    <option value=\"\">-Seleccionar estado-</option>\r\n                    {estados.map((estado) => <option value={estado}>{estado}</option>)}\r\n                </select>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={handleSubmitForm}\r\n                >\r\n                    Insertar\r\n                </Button>\r\n                <Button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={closeModal}\r\n                >\r\n                    Cancelar\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\elementos\\CardElemento.js",["362","363","364","365","366","367","368","369","370","371","372","373"],"import * as React from 'react';\r\nimport Swal from \"sweetalert2\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { elementoSetActive, elementoStartDelete } from \"../../actions/elements\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport const CardElemento = ({ dato }) => {\r\n    console.log(dato);\r\n    const bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (elemento) => {\r\n        Swal.fire({\r\n            title: '¿Seguro que quieres eliminiar este elemento?',\r\n            text: \"La información eliminada no podrá ser recuperada\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(elementoStartDelete(elemento));\r\n            }\r\n          })\r\n    }\r\n\r\n    const mostrarModalActualizar = (e) =>{\r\n        dispatch(uiOpenModal())\r\n        dispatch(elementoSetActive(e))\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n                    Elemento\r\n                </Typography>\r\n                {/* <img src={`${dato.foto}`} alt=\"Foto no encontrada\" class=\"about__img\"></img> */}\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {dato.nombre}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    Referencia: {dato.referencia}\r\n                    <div>\r\n                        Descripción: {dato.descripcion}\r\n                    </div>\r\n                    <div>\r\n                        Estado: {dato.estado}\r\n                    </div>\r\n                    <div>\r\n                        Observaciones: {dato.observaciones}\r\n                    </div>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => mostrarModalActualizar(dato)}\r\n                >\r\n                    Editar\r\n                </Button>{\" \"}\r\n                <Button color=\"danger\"\r\n                    onClick={() => handleDelete(dato)}\r\n                >Eliminar</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\sidebar\\sidebar.js",[],"C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\main-view\\ViewLaboratorios.js",["374","375","376"],"import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Sidebar } from '../sidebar/sidebar';\r\nimport { LabRegister } from '../laboratorios/labRegister';\r\n\r\n\r\nmoment.locale('es');\r\n\r\n// const events = [\r\n//     {\r\n//         cantidad: '',\r\n//         usuario: '',\r\n//         elemento: '',\r\n//         observaciones: '',\r\n//         start: moment().toDate(),\r\n//         end: moment().add(2, 'hours').toDate(),\r\n//         user:{\r\n//             _id:'123',\r\n//             name: 'fernando'\r\n//         }\r\n//     }\r\n// ]\r\n\r\nexport const ViewLaboratorios = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <div>\r\n                <Sidebar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USUARIO\\Documentos\\Code\\labsFront\\src\\components\\laboratorios\\Card.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"import * as React from 'react';\r\nimport Swal from \"sweetalert2\"\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { labClearActiveLab, labSetActive, labsStartLoading, labStartDelete } from \"../../actions/labs\";\r\nimport { proySetActive } from \"../../actions/proyectos\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport const CardAct = ({ dato }) => {\r\n    // console.log(dato);\r\n    const bull = (\r\n        <Box\r\n            component=\"span\"\r\n            sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n        >\r\n            •\r\n        </Box>\r\n    );\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (lab) => {\r\n        Swal.fire({\r\n            title: '¿Seguro que quieres eliminiar este laboratorio?',\r\n            text: \"La información eliminada no podrá ser recuperada\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Sí, eliminar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(labStartDelete(lab));\r\n            }\r\n        })\r\n    }\r\n\r\n    const mostrarModalActualizar = (e) => {\r\n        dispatch(uiOpenModal())\r\n        dispatch(labSetActive(e))\r\n        dispatch(proySetActive(e))\r\n    }\r\n\r\n    return (\r\n        <div class=\"card-lab\">\r\n            <div class=\"card__content\">\r\n                <h4 class=\"tarjeta-lab-title\">{dato.nombre}</h4>\r\n                <span class=\"card-description\">\r\n                        {dato.descripcion}\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","severity":1,"message":"403","line":6,"column":5,"nodeType":"404","messageId":"405","endLine":6,"endColumn":10},{"ruleId":"402","severity":1,"message":"406","line":19,"column":10,"nodeType":"404","messageId":"405","endLine":19,"endColumn":26},{"ruleId":"402","severity":1,"message":"407","line":2,"column":10,"nodeType":"404","messageId":"405","endLine":2,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":48,"column":22,"nodeType":"410","messageId":"411","endLine":48,"endColumn":24},{"ruleId":"402","severity":1,"message":"412","line":3,"column":8,"nodeType":"404","messageId":"405","endLine":3,"endColumn":12},{"ruleId":"402","severity":1,"message":"413","line":7,"column":5,"nodeType":"404","messageId":"405","endLine":7,"endColumn":10},{"ruleId":"402","severity":1,"message":"414","line":8,"column":5,"nodeType":"404","messageId":"405","endLine":8,"endColumn":11},{"ruleId":"402","severity":1,"message":"415","line":9,"column":5,"nodeType":"404","messageId":"405","endLine":9,"endColumn":14},{"ruleId":"402","severity":1,"message":"416","line":16,"column":10,"nodeType":"404","messageId":"405","endLine":16,"endColumn":14},{"ruleId":"402","severity":1,"message":"417","line":23,"column":11,"nodeType":"404","messageId":"405","endLine":23,"endColumn":16},{"ruleId":"402","severity":1,"message":"418","line":34,"column":12,"nodeType":"404","messageId":"405","endLine":34,"endColumn":22},{"ruleId":"402","severity":1,"message":"419","line":34,"column":24,"nodeType":"404","messageId":"405","endLine":34,"endColumn":37},{"ruleId":"402","severity":1,"message":"420","line":68,"column":11,"nodeType":"404","messageId":"405","endLine":68,"endColumn":33},{"ruleId":"402","severity":1,"message":"421","line":73,"column":11,"nodeType":"404","messageId":"405","endLine":73,"endColumn":30},{"ruleId":"402","severity":1,"message":"422","line":77,"column":11,"nodeType":"404","messageId":"405","endLine":77,"endColumn":23},{"ruleId":"423","severity":1,"message":"424","line":139,"column":25,"nodeType":"425","endLine":139,"endColumn":28},{"ruleId":"426","severity":1,"message":"427","line":62,"column":9,"nodeType":"428","messageId":"411","endLine":69,"endColumn":14},{"ruleId":"402","severity":1,"message":"429","line":1,"column":8,"nodeType":"404","messageId":"405","endLine":1,"endColumn":17},{"ruleId":"402","severity":1,"message":"430","line":8,"column":16,"nodeType":"404","messageId":"405","endLine":8,"endColumn":19},{"ruleId":"402","severity":1,"message":"431","line":8,"column":21,"nodeType":"404","messageId":"405","endLine":8,"endColumn":25},{"ruleId":"402","severity":1,"message":"416","line":11,"column":10,"nodeType":"404","messageId":"405","endLine":11,"endColumn":14},{"ruleId":"402","severity":1,"message":"432","line":49,"column":12,"nodeType":"404","messageId":"405","endLine":49,"endColumn":21},{"ruleId":"402","severity":1,"message":"433","line":50,"column":12,"nodeType":"404","messageId":"405","endLine":50,"endColumn":19},{"ruleId":"402","severity":1,"message":"434","line":54,"column":28,"nodeType":"404","messageId":"405","endLine":54,"endColumn":36},{"ruleId":"402","severity":1,"message":"435","line":56,"column":12,"nodeType":"404","messageId":"405","endLine":56,"endColumn":26},{"ruleId":"402","severity":1,"message":"436","line":60,"column":12,"nodeType":"404","messageId":"405","endLine":60,"endColumn":18},{"ruleId":"402","severity":1,"message":"437","line":60,"column":20,"nodeType":"404","messageId":"405","endLine":60,"endColumn":29},{"ruleId":"438","severity":1,"message":"439","line":72,"column":8,"nodeType":"440","endLine":72,"endColumn":36,"suggestions":"441"},{"ruleId":"402","severity":1,"message":"442","line":13,"column":29,"nodeType":"404","messageId":"405","endLine":13,"endColumn":41},{"ruleId":"402","severity":1,"message":"443","line":39,"column":24,"nodeType":"404","messageId":"405","endLine":39,"endColumn":29},{"ruleId":"438","severity":1,"message":"444","line":65,"column":8,"nodeType":"440","endLine":65,"endColumn":19,"suggestions":"445"},{"ruleId":"402","severity":1,"message":"446","line":1,"column":8,"nodeType":"404","messageId":"405","endLine":1,"endColumn":13},{"ruleId":"408","severity":1,"message":"447","line":6,"column":14,"nodeType":"410","messageId":"411","endLine":6,"endColumn":16},{"ruleId":"402","severity":1,"message":"448","line":3,"column":27,"nodeType":"404","messageId":"405","endLine":3,"endColumn":33},{"ruleId":"402","severity":1,"message":"449","line":3,"column":35,"nodeType":"404","messageId":"405","endLine":3,"endColumn":41},{"ruleId":"402","severity":1,"message":"450","line":17,"column":11,"nodeType":"404","messageId":"405","endLine":17,"endColumn":18},{"ruleId":"423","severity":1,"message":"424","line":44,"column":21,"nodeType":"425","endLine":44,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":48,"column":21,"nodeType":"425","endLine":48,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":52,"column":21,"nodeType":"425","endLine":52,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":56,"column":21,"nodeType":"425","endLine":56,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":60,"column":21,"nodeType":"425","endLine":60,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":64,"column":21,"nodeType":"425","endLine":64,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":77,"column":29,"nodeType":"425","endLine":77,"endColumn":69},{"ruleId":"398","replacedBy":"451"},{"ruleId":"400","replacedBy":"452"},{"ruleId":"402","severity":1,"message":"413","line":6,"column":5,"nodeType":"404","messageId":"405","endLine":6,"endColumn":10},{"ruleId":"402","severity":1,"message":"453","line":18,"column":7,"nodeType":"404","messageId":"405","endLine":18,"endColumn":11},{"ruleId":"438","severity":1,"message":"454","line":36,"column":8,"nodeType":"440","endLine":36,"endColumn":18,"suggestions":"455"},{"ruleId":"402","severity":1,"message":"420","line":54,"column":11,"nodeType":"404","messageId":"405","endLine":54,"endColumn":33},{"ruleId":"402","severity":1,"message":"421","line":59,"column":11,"nodeType":"404","messageId":"405","endLine":59,"endColumn":30},{"ruleId":"402","severity":1,"message":"422","line":63,"column":11,"nodeType":"404","messageId":"405","endLine":63,"endColumn":23},{"ruleId":"402","severity":1,"message":"443","line":42,"column":25,"nodeType":"404","messageId":"405","endLine":42,"endColumn":30},{"ruleId":"438","severity":1,"message":"456","line":74,"column":8,"nodeType":"440","endLine":74,"endColumn":19,"suggestions":"457"},{"ruleId":"402","severity":1,"message":"458","line":9,"column":23,"nodeType":"404","messageId":"405","endLine":9,"endColumn":34},{"ruleId":"402","severity":1,"message":"459","line":16,"column":8,"nodeType":"404","messageId":"405","endLine":16,"endColumn":18},{"ruleId":"402","severity":1,"message":"460","line":17,"column":8,"nodeType":"404","messageId":"405","endLine":17,"endColumn":17},{"ruleId":"402","severity":1,"message":"461","line":18,"column":8,"nodeType":"404","messageId":"405","endLine":18,"endColumn":16},{"ruleId":"402","severity":1,"message":"462","line":19,"column":8,"nodeType":"404","messageId":"405","endLine":19,"endColumn":14},{"ruleId":"402","severity":1,"message":"463","line":22,"column":10,"nodeType":"404","messageId":"405","endLine":22,"endColumn":13},{"ruleId":"402","severity":1,"message":"464","line":23,"column":8,"nodeType":"404","messageId":"405","endLine":23,"endColumn":20},{"ruleId":"402","severity":1,"message":"465","line":24,"column":8,"nodeType":"404","messageId":"405","endLine":24,"endColumn":17},{"ruleId":"402","severity":1,"message":"466","line":25,"column":8,"nodeType":"404","messageId":"405","endLine":25,"endColumn":22},{"ruleId":"402","severity":1,"message":"467","line":26,"column":8,"nodeType":"404","messageId":"405","endLine":26,"endColumn":20},{"ruleId":"402","severity":1,"message":"468","line":28,"column":7,"nodeType":"404","messageId":"405","endLine":28,"endColumn":17},{"ruleId":"402","severity":1,"message":"469","line":41,"column":11,"nodeType":"404","messageId":"405","endLine":41,"endColumn":15},{"ruleId":"402","severity":1,"message":"413","line":6,"column":3,"nodeType":"404","messageId":"405","endLine":6,"endColumn":8},{"ruleId":"402","severity":1,"message":"470","line":10,"column":26,"nodeType":"404","messageId":"405","endLine":10,"endColumn":39},{"ruleId":"402","severity":1,"message":"471","line":13,"column":41,"nodeType":"404","messageId":"405","endLine":13,"endColumn":65},{"ruleId":"402","severity":1,"message":"472","line":15,"column":25,"nodeType":"404","messageId":"405","endLine":15,"endColumn":33},{"ruleId":"402","severity":1,"message":"473","line":16,"column":10,"nodeType":"404","messageId":"405","endLine":16,"endColumn":26},{"ruleId":"402","severity":1,"message":"417","line":20,"column":11,"nodeType":"404","messageId":"405","endLine":20,"endColumn":16},{"ruleId":"402","severity":1,"message":"420","line":48,"column":11,"nodeType":"404","messageId":"405","endLine":48,"endColumn":33},{"ruleId":"402","severity":1,"message":"421","line":53,"column":11,"nodeType":"404","messageId":"405","endLine":53,"endColumn":30},{"ruleId":"402","severity":1,"message":"422","line":57,"column":11,"nodeType":"404","messageId":"405","endLine":57,"endColumn":23},{"ruleId":"402","severity":1,"message":"458","line":9,"column":23,"nodeType":"404","messageId":"405","endLine":9,"endColumn":34},{"ruleId":"402","severity":1,"message":"459","line":16,"column":8,"nodeType":"404","messageId":"405","endLine":16,"endColumn":18},{"ruleId":"402","severity":1,"message":"460","line":17,"column":8,"nodeType":"404","messageId":"405","endLine":17,"endColumn":17},{"ruleId":"402","severity":1,"message":"461","line":18,"column":8,"nodeType":"404","messageId":"405","endLine":18,"endColumn":16},{"ruleId":"402","severity":1,"message":"462","line":19,"column":8,"nodeType":"404","messageId":"405","endLine":19,"endColumn":14},{"ruleId":"402","severity":1,"message":"463","line":22,"column":10,"nodeType":"404","messageId":"405","endLine":22,"endColumn":13},{"ruleId":"402","severity":1,"message":"464","line":23,"column":8,"nodeType":"404","messageId":"405","endLine":23,"endColumn":20},{"ruleId":"402","severity":1,"message":"465","line":24,"column":8,"nodeType":"404","messageId":"405","endLine":24,"endColumn":17},{"ruleId":"402","severity":1,"message":"466","line":25,"column":8,"nodeType":"404","messageId":"405","endLine":25,"endColumn":22},{"ruleId":"402","severity":1,"message":"467","line":26,"column":8,"nodeType":"404","messageId":"405","endLine":26,"endColumn":20},{"ruleId":"402","severity":1,"message":"468","line":28,"column":7,"nodeType":"404","messageId":"405","endLine":28,"endColumn":17},{"ruleId":"402","severity":1,"message":"469","line":41,"column":11,"nodeType":"404","messageId":"405","endLine":41,"endColumn":15},{"ruleId":"402","severity":1,"message":"471","line":15,"column":32,"nodeType":"404","messageId":"405","endLine":15,"endColumn":56},{"ruleId":"438","severity":1,"message":"474","line":71,"column":8,"nodeType":"440","endLine":71,"endColumn":19,"suggestions":"475"},{"ruleId":"402","severity":1,"message":"413","line":6,"column":3,"nodeType":"404","messageId":"405","endLine":6,"endColumn":8},{"ruleId":"402","severity":1,"message":"453","line":18,"column":7,"nodeType":"404","messageId":"405","endLine":18,"endColumn":11},{"ruleId":"402","severity":1,"message":"420","line":53,"column":11,"nodeType":"404","messageId":"405","endLine":53,"endColumn":33},{"ruleId":"402","severity":1,"message":"421","line":58,"column":11,"nodeType":"404","messageId":"405","endLine":58,"endColumn":30},{"ruleId":"402","severity":1,"message":"422","line":62,"column":11,"nodeType":"404","messageId":"405","endLine":62,"endColumn":23},{"ruleId":"438","severity":1,"message":"476","line":71,"column":8,"nodeType":"440","endLine":71,"endColumn":19,"suggestions":"477"},{"ruleId":"402","severity":1,"message":"458","line":9,"column":23,"nodeType":"404","messageId":"405","endLine":9,"endColumn":34},{"ruleId":"402","severity":1,"message":"459","line":16,"column":8,"nodeType":"404","messageId":"405","endLine":16,"endColumn":18},{"ruleId":"402","severity":1,"message":"460","line":17,"column":8,"nodeType":"404","messageId":"405","endLine":17,"endColumn":17},{"ruleId":"402","severity":1,"message":"461","line":18,"column":8,"nodeType":"404","messageId":"405","endLine":18,"endColumn":16},{"ruleId":"402","severity":1,"message":"462","line":19,"column":8,"nodeType":"404","messageId":"405","endLine":19,"endColumn":14},{"ruleId":"402","severity":1,"message":"463","line":22,"column":10,"nodeType":"404","messageId":"405","endLine":22,"endColumn":13},{"ruleId":"402","severity":1,"message":"464","line":23,"column":8,"nodeType":"404","messageId":"405","endLine":23,"endColumn":20},{"ruleId":"402","severity":1,"message":"465","line":24,"column":8,"nodeType":"404","messageId":"405","endLine":24,"endColumn":17},{"ruleId":"402","severity":1,"message":"466","line":25,"column":8,"nodeType":"404","messageId":"405","endLine":25,"endColumn":22},{"ruleId":"402","severity":1,"message":"467","line":26,"column":8,"nodeType":"404","messageId":"405","endLine":26,"endColumn":20},{"ruleId":"402","severity":1,"message":"468","line":28,"column":7,"nodeType":"404","messageId":"405","endLine":28,"endColumn":17},{"ruleId":"402","severity":1,"message":"469","line":41,"column":11,"nodeType":"404","messageId":"405","endLine":41,"endColumn":15},{"ruleId":"402","severity":1,"message":"413","line":6,"column":3,"nodeType":"404","messageId":"405","endLine":6,"endColumn":8},{"ruleId":"402","severity":1,"message":"473","line":16,"column":10,"nodeType":"404","messageId":"405","endLine":16,"endColumn":26},{"ruleId":"402","severity":1,"message":"420","line":49,"column":11,"nodeType":"404","messageId":"405","endLine":49,"endColumn":33},{"ruleId":"402","severity":1,"message":"421","line":54,"column":11,"nodeType":"404","messageId":"405","endLine":54,"endColumn":30},{"ruleId":"402","severity":1,"message":"422","line":58,"column":11,"nodeType":"404","messageId":"405","endLine":58,"endColumn":23},{"ruleId":"402","severity":1,"message":"478","line":48,"column":54,"nodeType":"404","messageId":"405","endLine":48,"endColumn":67},{"ruleId":"402","severity":1,"message":"479","line":58,"column":12,"nodeType":"404","messageId":"405","endLine":58,"endColumn":32},{"ruleId":"438","severity":1,"message":"480","line":81,"column":8,"nodeType":"440","endLine":81,"endColumn":19,"suggestions":"481"},{"ruleId":"402","severity":1,"message":"458","line":9,"column":23,"nodeType":"404","messageId":"405","endLine":9,"endColumn":34},{"ruleId":"402","severity":1,"message":"459","line":16,"column":8,"nodeType":"404","messageId":"405","endLine":16,"endColumn":18},{"ruleId":"402","severity":1,"message":"460","line":17,"column":8,"nodeType":"404","messageId":"405","endLine":17,"endColumn":17},{"ruleId":"402","severity":1,"message":"461","line":18,"column":8,"nodeType":"404","messageId":"405","endLine":18,"endColumn":16},{"ruleId":"402","severity":1,"message":"462","line":19,"column":8,"nodeType":"404","messageId":"405","endLine":19,"endColumn":14},{"ruleId":"402","severity":1,"message":"463","line":22,"column":10,"nodeType":"404","messageId":"405","endLine":22,"endColumn":13},{"ruleId":"402","severity":1,"message":"464","line":23,"column":8,"nodeType":"404","messageId":"405","endLine":23,"endColumn":20},{"ruleId":"402","severity":1,"message":"465","line":24,"column":8,"nodeType":"404","messageId":"405","endLine":24,"endColumn":17},{"ruleId":"402","severity":1,"message":"466","line":25,"column":8,"nodeType":"404","messageId":"405","endLine":25,"endColumn":22},{"ruleId":"402","severity":1,"message":"467","line":26,"column":8,"nodeType":"404","messageId":"405","endLine":26,"endColumn":20},{"ruleId":"402","severity":1,"message":"468","line":28,"column":7,"nodeType":"404","messageId":"405","endLine":28,"endColumn":17},{"ruleId":"402","severity":1,"message":"469","line":41,"column":11,"nodeType":"404","messageId":"405","endLine":41,"endColumn":15},{"ruleId":"402","severity":1,"message":"482","line":1,"column":17,"nodeType":"404","messageId":"405","endLine":1,"endColumn":26},{"ruleId":"402","severity":1,"message":"483","line":1,"column":28,"nodeType":"404","messageId":"405","endLine":1,"endColumn":36},{"ruleId":"402","severity":1,"message":"484","line":7,"column":10,"nodeType":"404","messageId":"405","endLine":7,"endColumn":21},{"ruleId":"402","severity":1,"message":"485","line":4,"column":8,"nodeType":"404","messageId":"405","endLine":4,"endColumn":12},{"ruleId":"402","severity":1,"message":"486","line":6,"column":8,"nodeType":"404","messageId":"405","endLine":6,"endColumn":19},{"ruleId":"402","severity":1,"message":"487","line":7,"column":8,"nodeType":"404","messageId":"405","endLine":7,"endColumn":19},{"ruleId":"402","severity":1,"message":"488","line":8,"column":10,"nodeType":"404","messageId":"405","endLine":8,"endColumn":27},{"ruleId":"402","severity":1,"message":"473","line":8,"column":43,"nodeType":"404","messageId":"405","endLine":8,"endColumn":59},{"ruleId":"402","severity":1,"message":"458","line":10,"column":23,"nodeType":"404","messageId":"405","endLine":10,"endColumn":34},{"ruleId":"402","severity":1,"message":"414","line":13,"column":5,"nodeType":"404","messageId":"405","endLine":13,"endColumn":11},{"ruleId":"402","severity":1,"message":"459","line":17,"column":8,"nodeType":"404","messageId":"405","endLine":17,"endColumn":18},{"ruleId":"402","severity":1,"message":"460","line":18,"column":8,"nodeType":"404","messageId":"405","endLine":18,"endColumn":17},{"ruleId":"402","severity":1,"message":"461","line":19,"column":8,"nodeType":"404","messageId":"405","endLine":19,"endColumn":16},{"ruleId":"402","severity":1,"message":"462","line":20,"column":8,"nodeType":"404","messageId":"405","endLine":20,"endColumn":14},{"ruleId":"402","severity":1,"message":"489","line":22,"column":8,"nodeType":"404","messageId":"405","endLine":22,"endColumn":18},{"ruleId":"402","severity":1,"message":"463","line":23,"column":10,"nodeType":"404","messageId":"405","endLine":23,"endColumn":13},{"ruleId":"402","severity":1,"message":"464","line":24,"column":8,"nodeType":"404","messageId":"405","endLine":24,"endColumn":20},{"ruleId":"402","severity":1,"message":"465","line":25,"column":8,"nodeType":"404","messageId":"405","endLine":25,"endColumn":17},{"ruleId":"402","severity":1,"message":"466","line":26,"column":8,"nodeType":"404","messageId":"405","endLine":26,"endColumn":22},{"ruleId":"402","severity":1,"message":"467","line":27,"column":8,"nodeType":"404","messageId":"405","endLine":27,"endColumn":20},{"ruleId":"402","severity":1,"message":"468","line":29,"column":7,"nodeType":"404","messageId":"405","endLine":29,"endColumn":17},{"ruleId":"402","severity":1,"message":"469","line":42,"column":11,"nodeType":"404","messageId":"405","endLine":42,"endColumn":15},{"ruleId":"402","severity":1,"message":"422","line":53,"column":11,"nodeType":"404","messageId":"405","endLine":53,"endColumn":23},{"ruleId":"402","severity":1,"message":"420","line":69,"column":11,"nodeType":"404","messageId":"405","endLine":69,"endColumn":33},"no-native-reassign",["490"],"no-negated-in-lhs",["491"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'ViewLaboratorios' is defined but never used.","'authReducer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'logo' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'state' is assigned a value but never used.","'formValues' is assigned a value but never used.","'setFormValues' is assigned a value but never used.","'mostrarModalActualizar' is assigned a value but never used.","'cerrarModalInsertar' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-duplicate-case","Duplicate case label.","SwitchCase","'userEvent' is defined but never used.","'uid' is assigned a value but never used.","'name' is assigned a value but never used.","'dateStart' is assigned a value but never used.","'dateEnd' is assigned a value but never used.","'cantidad' is assigned a value but never used.","'cantidadValida' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setisOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'fechaDevolucion', and 'fechaPrestamo'. Either include them or remove the dependency array.","ArrayExpression",["492"],"'labSetActive' is defined but never used.","'labId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activeLab'. Either include it or remove the dependency array.",["493"],"'axios' is defined but never used.","Expected '===' and instead saw '=='.","'Router' is defined but never used.","'Switch' is defined but never used.","'goToLab' is assigned a value but never used.",["490"],["491"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'proyectos'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has a missing dependency: 'activeProy'. Either include it or remove the dependency array.",["495"],"'useSelector' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'ExpandMore' is assigned a value but never used.","'bull' is assigned a value but never used.","'ProyectoModal' is defined but never used.","'categoriaClearActiveProy' is defined but never used.","'CardProy' is defined but never used.","'labsStartLoading' is defined but never used.","React Hook useEffect has a missing dependency: 'activeCategoria'. Either include it or remove the dependency array.",["496"],"React Hook useEffect has a missing dependency: 'activeGrupoE'. Either include it or remove the dependency array.",["497"],"'observaciones' is assigned a value but never used.","'observacionesValidas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activeElemento'. Either include it or remove the dependency array.",["498"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'LabRegister' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'labClearActiveLab' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},"Update the dependencies array to be: [activeEvent, dispatch, fechaDevolucion, fechaPrestamo, setFormValues]",{"range":"513","text":"514"},"Update the dependencies array to be: [activeLab, modalOpen]",{"range":"515","text":"516"},"Update the dependencies array to be: [dispatch, proyectos]",{"range":"517","text":"518"},"Update the dependencies array to be: [activeProy, modalOpen]",{"range":"519","text":"520"},"Update the dependencies array to be: [activeCategoria, modalOpen]",{"range":"521","text":"522"},"Update the dependencies array to be: [activeGrupoE, modalOpen]",{"range":"523","text":"524"},"Update the dependencies array to be: [activeElemento, modalOpen]",{"range":"525","text":"526"},[2452,2480],"[activeEvent, dispatch, fechaDevolucion, fechaPrestamo, setFormValues]",[1667,1678],"[activeLab, modalOpen]",[1360,1370],"[dispatch, proyectos]",[1931,1942],"[activeProy, modalOpen]",[1848,1859],"[activeCategoria, modalOpen]",[1961,1972],"[activeGrupoE, modalOpen]",[2472,2483],"[activeElemento, modalOpen]"]